; ===========================================
; Celery beat
; ===========================================

[program:%(project_name)s-celerybeat]

command=%(python)s %(managepy)s celery beat
    --schedule=%(var_dir)s/celerybeat-schedule
    --loglevel=INFO
directory=%(project_root)s
user=%(user)s
numprocs=1
stdout_logfile=%(var_dir)s/log/celery/celerybeat.log
stderr_logfile=%(var_dir)s/log/celery/celerybeat.error.log
autostart=true
autorestart=true
startsecs=10

; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=999


; ==============================================
; Celery worker
; ==============================================

[program:%(project_name)s-celeryd]

command=%(python)s %(managepy)s celery worker
    --events
    --loglevel=INFO
directory=%(project_root)s
user=%(user)s
numprocs=1
stdout_logfile=%(var_dir)s/log/celery/celeryd.log
stderr_logfile=%(var_dir)s/log/celery/celeryd.error.log
autostart=true
autorestart=true
startsecs=10

; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 600

; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=998


; ===========================================
; Celery camera
; ===========================================

[program:%(project_name)s-celerycam]

command=%(python)s %(managepy)s celerycam
    --loglevel=INFO
directory=%(project_root)s
user=%(user)s
numprocs=1
stdout_logfile=%(var_dir)s/log/celery/celerycam.log
stderr_logfile=%(var_dir)s/log/celery/celerycam.error.log
autostart=true
autorestart=true
startsecs=10

; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=997
